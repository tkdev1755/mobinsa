name: Build & Release (MacOS)
permissions:
  contents: write
on:
  push:
    tags:
      - "v*" # déclenche seulement si le push correspond à un tag style v1.0.0
  workflow_dispatch:


jobs:
  build:
  
    if: "contains(github.event.head_commit.message, '[RELEASE]') || github.event_name == 'workflow_dispatch'"
    runs-on: macos-latest
    outputs : 
      version: ${{ steps.get_version.outputs.version }}
    steps:
      # 1. Checkout du repo Flutter
      - name: Checkout Flutter app
        uses: actions/checkout@v4

      # 2. Setup Flutter
      - name: Install Flutter & Dart
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: 'pubspec.yaml'

      # 3. Build Flutter macOS app
      - name: Build Flutter macOS app
        run: | 
          flutter build macos --release
          xcodebuild -workspace macos/Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
        
      - name: Extract version from pubspec.yaml
        id: get_version
        shell: bash
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Zip up the executable
        run: |
          cd build/macos/Build/Products/Release
          zip -r mobinsa_macos_universal.zip mobinsa.app
          cd ../../../../../
      # 7. Publier en artefact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mobinsaMacOSUniversal
          path: build/macos/Build/Products/Release/mobinsa_macos_universal.zip
  release:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Download Release
        uses: actions/download-artifact@v4
        with:
          path: ./release_files
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: v${{ needs.build.outputs.version }}
          draft: true
          files: ./release_files/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
